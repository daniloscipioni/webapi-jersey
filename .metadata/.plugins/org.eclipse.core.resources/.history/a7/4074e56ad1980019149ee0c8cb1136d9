package com.schott.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.schott.connection.ConnectionFactory;

public class TestrestDAO {
	
private PreparedStatement stmt = null;
	
	
	
	public String returnErrorSql;
	
		
	public String getReturnErrorSql() {
		return returnErrorSql;
	}

	public void setReturnErrorSql(String returnErrorSql) {
		this.returnErrorSql = returnErrorSql;
	}


	
	public void UpdatePalletQuantity(int quantity, String pallet )
    {  

		Connection con = ConnectionFactory.GetConnection();
		
        try {
            PreparedStatement stmt = con.prepareStatement("update fpp.tbl_fpp_generated_card set qty_pieces_confirmed = ? where pallet_no = ?");
		    stmt.setInt(1, quantity);
			stmt.setString(2, pallet);
			stmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			
			
			e.printStackTrace();
		}finally {
			ConnectionFactory.closeConnection(con, stmt);
		}
        
    }
	
	public void UpdateBoxQuantity(int quantity, String pallet )
    {  

		Connection con = ConnectionFactory.GetConnection();
		
        try {
            PreparedStatement stmt = con.prepareStatement("update fpp.tbl_fpp_generated_card set qty_box_confirmed = ? where pallet_no = ?");
		    stmt.setInt(1, quantity);
			stmt.setString(2, pallet);
			stmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			
			setReturnErrorSql("Erro de update quantity " + e.getMessage() + " - " + new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(new Date()));
			
			e.printStackTrace();
		}finally {
			ConnectionFactory.closeConnection(con, stmt);
		}
        
    }
	
	public void UpdateMissingQuantity(int missingQuantity, String pallet )
    {  

		Connection con = ConnectionFactory.GetConnection();
		
        try {
            PreparedStatement stmt = con.prepareStatement("update fpp.tbl_fpp_generated_card set order_missing_qty = ? where pallet_no = ?");
		    stmt.setInt(1, missingQuantity);
			stmt.setString(2, pallet);
			stmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			
			setReturnErrorSql("Erro de update quantity " + e.getMessage() + " - " + new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(new Date()));
			
			e.printStackTrace();
		}finally {
			ConnectionFactory.closeConnection(con, stmt);
		}
        
    }
}
